name: Run Integration Tests
env:
  PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
  TERRAFORM_AWS_ACCESS_KEY_ID: ${{ secrets.TERRAFORM_AWS_ACCESS_KEY_ID }}
  TERRAFORM_AWS_SECRET_ACCESS_KEY: ${{ secrets.TERRAFORM_AWS_SECRET_ACCESS_KEY }}

on:
  push:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  EC2LinuxIntegrationTest:
    name: 'EC2LinuxIntegrationTest'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: integration/terraform/ec2/linux
    strategy:
      fail-fast: false
      matrix:
        arrays: [
          { os: "ubuntu", package: "package-deb",  username: "ubuntu",
            installAgentCommand: "dpkg -i -E ./amazon-cloudwatch-agent.deb",
            ami: "cloudwatch-agent-integration-test-ubuntu", caCertPath: "/etc/ssl/certs/ca-certificates.crt",
            arc: "amd64" },
          { os: "al2", package: "package-rpm",  username: "ec2-user",
            installAgentCommand: "rpm -U ./amazon-cloudwatch-agent.rpm",
            ami: "cloudwatch-agent-integration-test-al2", caCertPath: "/etc/ssl/certs/ca-bundle.crt",
            arc: "amd64" }
        ]
    steps:
      - uses: actions/checkout@v2

      - name: Echo OS
        run: echo run on ec2 instance os ${{ matrix.arrays.os }}

      - name: Verify Terraform version
        run: terraform --version

      - name: Terraform init
        run: terraform init -var="aws_access_key=${TERRAFORM_AWS_ACCESS_KEY_ID}" -var="aws_secret_access_key=${TERRAFORM_AWS_ACCESS_KEY_ID}"

      - name: Terraform apply
        run: >
          echo run terraform and execute test code &&
          terraform apply --auto-approve
          -var="ssh_key=${PRIVATE_KEY}"
          -var="aws_access_key=${TERRAFORM_AWS_ACCESS_KEY_ID}"
          -var="aws_secret_access_key=${TERRAFORM_AWS_SECRET_ACCESS_KEY}"
          -var="github_repo=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}.git"
          -var="github_sha=${GITHUB_SHA}"
          -var="package=${{ matrix.arrays.package }}"
          -var="install_agent=${{ matrix.arrays.installAgentCommand }}"
          -var="user=${{ matrix.arrays.username }}"
          -var="ami=${{ matrix.arrays.ami }}"
          -var="ca_cert_path=${{ matrix.arrays.caCertPath }}"
          -var="arc=${{ matrix.arrays.arc }}"

      - name: Terraform destroy
        if: always()
        run: >
          terraform destroy --auto-approve
          -var="aws_access_key=${TERRAFORM_AWS_ACCESS_KEY_ID}"
          -var="aws_secret_access_key=${TERRAFORM_AWS_SECRET_ACCESS_KEY}"
          -var="ami=${{ matrix.arrays.ami }}"