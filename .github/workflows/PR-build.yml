# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT

name: PR Build
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  macos-unittest:
    if: ${{ always() }}
    runs-on: macos-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ~1.19.2

    - name: Check out code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: 'true'

    - name: Cache build output
      id: cached_binaries
      uses: actions/cache@v2
      with:
        path: |
              ~/Library/Caches/go-build
              ~/go/pkg/mod
        key: v1-go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.sum') }}

    - name: Test
      if: steps.cached_binaries.outputs.cache-hit != 'true'
      run: make test

    - name: Upload coverage to Codecov
      if: steps.cached_binaries.outputs.cache-hit != 'true'
      uses: codecov/codecov-action@v2
      with:
        verbose: true

    - name: Build
      if: steps.cached_binaries.outputs.cache-hit != 'true'
      run: make build
  
  windows-unittest:
    if: ${{ always() }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-2019, windows-latest ]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ~1.19.2

      - name: Cache Go
        id: cached_binaries
        uses: actions/cache@v2
        with:
          path: |
            %LocalAppData%\go-build
            ~/go/pkg/mod
          key: v1-go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.sum') }}

      - name: Install make
        if: steps.cached_binaries.outputs.cache-hit != 'true'
        run: choco install make

      - name: Run Unit tests
        if: steps.cached_binaries.outputs.cache-hit != 'true'
        run: make test

      - name: Upload coverage to Codecov
        if: steps.cached_binaries.outputs.cache-hit != 'true'
        uses: codecov/codecov-action@v2
        with:
          verbose: true

      - name: Run build
        if: steps.cached_binaries.outputs.cache-hit != 'true'
        run: make build
  
  linux-unittest:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ~1.19.2

    - name: Check out code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: 'true'

    # This requires the go mod tidy to not look at the go proxy
    - name: Go proxy direct
      run: GOPROXY=direct

    - uses: zencargo/github-action-go-mod-tidy@v1
      with:
        go-version: 1.19.2

    - name: Cache build output
      id: cached_binaries
      uses: actions/cache@v2
      with:
        path: |
              ~/.cache/go-build
              ~/go/pkg/mod
        key: v1-go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.sum') }}

    - name: Test
      if: steps.cached_binaries.outputs.cache-hit != 'true'
      run: make test

    - name: Upload coverage to Codecov
      if: steps.cached_binaries.outputs.cache-hit != 'true'
      uses: codecov/codecov-action@v2
      with:
        verbose: true

    - name: Build
      if: steps.cached_binaries.outputs.cache-hit != 'true'
      run: make build