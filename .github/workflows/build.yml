name: build-and-test

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:

jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            cachepath: |
              ~/.cache/go-build
              ~/go/pkg/mod
          - os: macos-latest
            cachepath: |
              ~/Library/Caches/go-build
              ~/go/pkg/mod
    steps:  
    - name: Cache if success
      id: build-test
      uses: actions/cache@v2
      with:
        path: LICENSE
        key: ${{ github.workflow }}-${{ github.run_id }}-${{ matrix.os }}
    
    - name: Set up Go 1.x
      if: steps.build-test.outputs.cache-hit != 'true'
      uses: actions/setup-go@v2
      with:
        go-version: ~1.15.15
      

    - name: Configure git with longpath enabled (for windows)
      if: steps.build-test.outputs.cache-hit != 'true'
      run: git config --global core.longpaths true

    - name: Check out code
      if: steps.build-test.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: 'true'

    - name: Debug go.mod
      if: steps.build-test.outputs.cache-hit != 'true'
      run: cat go.mod

    - name: Cache build output
      if: steps.build-test.outputs.cache-hit != 'true'
      uses: actions/cache@v2
      with:
        path: ${{ matrix.cachepath }}
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

    - name: Test
      if: steps.build-test.outputs.cache-hit != 'true'
      run: make test

    - name: Upload coverage to Codecov
      if: steps.build-test.outputs.cache-hit != 'true'
      uses: codecov/codecov-action@v2
      with:
        verbose: true

    - name: Build
      if: steps.build-test.outputs.cache-hit != 'true'
      run: make build
