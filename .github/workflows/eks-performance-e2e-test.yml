# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT

name: EKS Performance Test Execution
env:
  TERRAFORM_AWS_ASSUME_ROLE_DURATION: 14400 # 4 hours

on:
  workflow_call:
    inputs:
      job_id:
        required: true
        type: string
      cluster_name:
        required: false
        type: string
      cloudwatch_agent_repository:
        required: true
        type: string
      cloudwatch_agent_tag:
        required: true
        type: string
      cloudwatch_agent_operator_repository:
        required: true
        type: string
      cloudwatch_agent_target_allocator_repository:
        required: false
        type: string
      cloudwatch_agent_operator_tag:
        required: true
        type: string
      helm_charts_branch:
        required: true
        type: string
      nodes:
        required: true
        type: string
      node_groups:
        required: true
        type: string
      region:
        required: true
        type: string
      terraform_assume_role:
        required: true
        type: string
      terraform_dir:
        required: true
        type: string
      test_repo_name:
        required: true
        type: string
      test_repo_url:
        required: true
        type: string
      test_repo_branch:
        required: true
        type: string

jobs:
  GenerateEKSPerformanceCluster:
    name: GenerateEKSPerformanceCluster
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{inputs.test_repo_name}}
          ref: ${{inputs.test_repo_branch}}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.terraform_assume_role }}
          aws-region: ${{ inputs.region }}
          role-duration-seconds: ${{ env.TERRAFORM_AWS_ASSUME_ROLE_DURATION }}

      - name: Login ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.0

      - name: Verify Terraform version
        run: terraform --version

      - name: Terraform apply
        uses: nick-fields/retry@v2
        with:
          max_attempts: 3
          timeout_minutes: 60
          retry_wait_seconds: 5
          command: |
            if [ "${{ inputs.terraform_dir }}" != "" ]; then
              cd "${{ inputs.terraform_dir }}"
            else
              cd terraform/eks/performance
            fi

            terraform init
            terraform apply --auto-approve \
              -var="region=${{ inputs.region }}" \
              -var="cluster_name=${{ inputs.cluster_name }}" \
              -var="helm_charts_branch=${{ inputs.helm_charts_branch }}" \
              -var="nodes=${{ inputs.nodes }}" \
              -var="node_groups=${{inputs.node_groups}}" \
              -var="cloudwatch_agent_repository_url=${{ steps.login-ecr.outputs.registry }}" \
              -var="cloudwatch_agent_repository=${{ inputs.cloudwatch_agent_repository }}" \
              -var="cloudwatch_agent_tag=${{ inputs.cloudwatch_agent_tag }}" \
              -var="cloudwatch_agent_operator_repository_url=${{ steps.login-ecr.outputs.registry }}" \
              -var="cloudwatch_agent_operator_repository=${{ inputs.cloudwatch_agent_operator_repository }}" \
              -var="cloudwatch_agent_operator_tag=${{ inputs.cloudwatch_agent_operator_tag }}" \
              -var="cloudwatch_agent_target_allocator_repository_url=${{ steps.login-ecr.outputs.registry }}" \
              -var="cloudwatch_agent_target_allocator_repository=${{ inputs.cloudwatch_agent_target_allocator_repository }}" \
              -var="cloudwatch_agent_target_allocator_tag=${{ inputs.cloudwatch_agent_operator_tag }}" || \
            (terraform destroy --auto-approve && exit 1)

      - name: Terraform destroy
        uses: nick-fields/retry@v2
        with:
          max_attempts: 3
          timeout_minutes: 8
          retry_wait_seconds: 5
          command: |
            if [ "${{ inputs.terraform_dir }}" != "" ]; then
              cd "${{ inputs.terraform_dir }}"
            else
              cd terraform/eks/performance
            fi
            
            # Get the cluster name from terraform output
            CLUSTER_NAME=$(terraform output -raw cluster_name)
            
            # Update kubeconfig for this cluster
            aws eks update-kubeconfig --name ${CLUSTER_NAME} --region ${{ inputs.region }}
            
            # Now run destroy
            terraform destroy --auto-approve