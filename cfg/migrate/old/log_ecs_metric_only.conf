[agent]
  collection_jitter = "0s"
  debug = false
  flush_interval = "1s"
  flush_jitter = "0s"
  hostname = "fake-host-name"
  interval = "60s"
  logfile = ""
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  omit_hostname = true
  precision = ""
  quiet = false
  round_interval = false

[inputs]

  [[inputs.cadvisor]]
    container_orchestrator = "ecs"
    interval = "30s"
    mode = "detail"
    [inputs.cadvisor.tags]
      metricPath = "logs"

  [[inputs.socket_listener]]
    data_format = "emf"
    name_override = "emf"
    service_address = "udp://:25888"
    [inputs.socket_listener.tags]
      metricPath = "logs_socket_listener"

  [[inputs.socket_listener]]
    data_format = "emf"
    name_override = "emf"
    service_address = "tcp://:25888"
    [inputs.socket_listener.tags]
      metricPath = "logs_socket_listener"

[outputs]

  [[outputs.cloudwatchlogs]]
    endpoint_override = "https://fake_endpoint"
    file_state_folder = "/opt/aws/amazon-cloudwatch-agent/logs/state"
    force_flush_interval = "5s"
    log_stream_name = "fake-host-name"
    region = "us-west-2"
    tagexclude = ["metricPath"]
    [outputs.cloudwatchlogs.tagpass]
      metricPath = ["logs", "logs_socket_listener"]

[processors]

  [[processors.ec2tagger]]
    disk_device_tag_key = "device"
    ebs_device_keys = ["*"]
    ec2_instance_tag_keys = ["aws:autoscaling:groupName"]
    ec2_metadata_tags = ["InstanceId", "InstanceType"]
    [processors.ec2tagger.tagpass]
      metricPath = ["logs"]

  [[processors.ecsdecorator]]
    host_ip = "127.0.0.1"
    order = 1
    [processors.ecsdecorator.tagpass]
      metricPath = ["logs"]
