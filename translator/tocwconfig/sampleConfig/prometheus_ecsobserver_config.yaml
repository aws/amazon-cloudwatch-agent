exporters:
    awscloudwatch:
        force_flush_interval: 1m0s
        max_datums_per_call: 1000
        max_values_per_datum: 150
        middleware: agenthealth/metrics
        namespace: CWAgent
        region: us-west-2
        resource_to_telemetry_conversion:
            enabled: true
    prometheusremotewrite/amp:
        add_metric_suffixes: true
        auth:
            authenticator: sigv4auth
        endpoint: https://aps-workspaces.us-west-2.amazonaws.com/workspaces/ws-12345/api/v1/remote_write
        idle_conn_timeout: 1m30s
        max_batch_size_bytes: 3000000
        max_idle_conns: 100
        namespace: ""
        remote_write_queue:
            enabled: true
            num_consumers: 5
            queue_size: 10000
        resource_to_telemetry_conversion:
            clear_after_copy: true
            enabled: true
        retry_on_failure:
            enabled: true
            initial_interval: 50ms
            max_elapsed_time: 5m0s
            max_interval: 30s
            multiplier: 1.5
            randomization_factor: 0.5
        send_metadata: false
        target_info:
            enabled: true
        timeout: 5s
        write_buffer_size: 524288
extensions:
    agenthealth/metrics:
        is_usage_data_enabled: true
        stats:
            operations:
                - PutMetricData
            usage_flags:
                mode: EC2
                region_type: ACJ
    agenthealth/statuscode:
        is_status_code_enabled: true
        is_usage_data_enabled: true
        stats:
            usage_flags:
                mode: EC2
                region_type: ACJ
    ecs_observer:
        cluster_name: ecs-cluster-a
        cluster_region: us-west-2
        docker_labels:
            - job_name_label: ECS_PROMETHEUS_JOB_NAME_1
              metrics_path_label: ECS_PROMETHEUS_METRICS_PATH
              port_label: ECS_PROMETHEUS_EXPORTER_PORT_SUBSET
        refresh_interval: 1m
        result_file: "{ecsSdFileName}"
        services:
            - container_name_pattern: nginx-prometheus-exporter
              job_name: service_name_1
              metrics_path: /metrics
              metrics_ports:
                - "9113"
              name_pattern: .*-application-stack
            - metrics_path: /stats/metrics
              metrics_ports:
                - "9114"
              name_pattern: run-application-stack
        task_definitions:
            - arn_pattern: .*task_def_1:[0-9]+
              job_name: task_def_1
              metrics_path: /stats/metrics
              metrics_ports:
                - "9901"
            - arn_pattern: task_def_2
              container_name_pattern: ^envoy$
              metrics_path: /metrics
              metrics_ports:
                - "9902"
    entitystore:
        mode: ec2
        region: us-west-2
    sigv4auth:
        assume_role:
            sts_region: us-west-2
        region: us-west-2
processors:
    batch/prometheus/amp:
        metadata_cardinality_limit: 1000
        send_batch_max_size: 0
        send_batch_size: 8192
        timeout: 1m0s
    batch/prometheus/cloudwatch:
        metadata_cardinality_limit: 1000
        send_batch_max_size: 0
        send_batch_size: 8192
        timeout: 1m0s
    cumulativetodelta/prometheus/cloudwatch:
        exclude:
            match_type: ""
        include:
            match_type: ""
        initial_value: 2
        max_staleness: 0s
    deltatocumulative/prometheus/amp:
        max_stale: 336h0m0s
        max_streams: 9223372036854775807
receivers:
    prometheus:
        config:
            global:
                evaluation_interval: 1m
                scrape_interval: 5m
                scrape_protocols:
                    - OpenMetricsText1.0.0
                    - OpenMetricsText0.0.1
                    - PrometheusText1.0.0
                    - PrometheusText0.0.4
                scrape_timeout: 5s
            scrape_configs:
                - enable_compression: true
                  enable_http2: true
                  fallback_scrape_protocol: PrometheusText0.0.4
                  file_sd_configs:
                    - files: [ "{ecsSdFileName}" ]
                      refresh_interval: 5m
                  follow_redirects: true
                  honor_timestamps: true
                  job_name: cwagent-ecs-file-sd-config
                  metrics_path: /metrics
                  sample_limit: 10000
                  scheme: http
                  scrape_interval: 5m
                  scrape_protocols:
                    - OpenMetricsText1.0.0
                    - OpenMetricsText0.0.1
                    - PrometheusText1.0.0
                    - PrometheusText0.0.4
                  scrape_timeout: 5s
                  track_timestamps_staleness: false
        report_extra_scrape_metrics: false
        start_time_metric_regex: ""
        trim_metric_suffixes: false
        use_start_time_metric: false
service:
    extensions:
        - agenthealth/metrics
        - agenthealth/statuscode
        - ecs_observer
        - sigv4auth
        - entitystore
    pipelines:
        metrics/prometheus/amp:
            exporters:
                - prometheusremotewrite/amp
            processors:
                - batch/prometheus/amp
                - deltatocumulative/prometheus/amp
            receivers:
                - prometheus
        metrics/prometheus/cloudwatch:
            exporters:
                - awscloudwatch
            processors:
                - batch/prometheus/cloudwatch
                - cumulativetodelta/prometheus/cloudwatch
            receivers:
                - prometheus
    telemetry:
        logs:
            encoding: console
            level: info
            output_paths:
                - /opt/aws/amazon-cloudwatch-agent/logs/amazon-cloudwatch-agent.log
            sampling:
                enabled: true
                initial: 2
                thereafter: 500
                tick: 10s
        metrics:
            level: None
        traces:
            level: None
