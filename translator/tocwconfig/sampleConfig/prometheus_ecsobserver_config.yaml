exporters:
    awsemf/prometheus:
        add_entity: false
        certificate_file_path: ""
        detailed_metrics: false
        dimension_rollup_option: NoDimensionRollup
        disable_metric_extraction: false
        eks_fargate_container_insights_enabled: false
        endpoint: ""
        enhanced_container_insights: false
        external_id: ""
        imds_retries: 1
        local_mode: false
        log_group_name: /aws/ecs/containerinsights/TestCluster/prometheus
        log_retention: 0
        log_stream_name: '{JobName}'
        max_retries: 2
        metric_declarations:
            - dimensions:
                - - Service
              label_matchers:
                - label_names:
                    - Service
                  regex: nginx.*
                  separator: ;
              metric_name_selectors:
                - ^nginx_request_count$
            - dimensions: []
              label_matchers:
                - label_names:
                    - Namespace
                  regex: default
                  separator: ;
              metric_name_selectors:
                - .*
            - dimensions:
                - - name
              label_matchers:
                - label_names:
                    - name
                  regex: .*
                  separator: ;
              metric_name_selectors:
                - ^.*$
            - dimensions:
                - - name
              label_matchers:
                - label_names:
                    - name
                  regex: .*
                  separator: ;
              metric_name_selectors:
                - ^node_cpu_guest_seconds_total$
        metric_descriptors:
            - metric_name: nginx_request_count
              overwrite: false
              unit: Count
        middleware: agenthealth/logs
        namespace: CustomizedNamespace
        no_verify_ssl: false
        num_workers: 8
        output_destination: cloudwatch
        profile: ""
        proxy_address: ""
        region: us-west-2
        request_timeout_seconds: 30
        resource_arn: ""
        resource_to_telemetry_conversion:
            enabled: true
        retain_initial_value_of_delta_metric: false
        role_arn: ""
        version: "0"
extensions:
    agenthealth/logs:
        is_usage_data_enabled: true
        stats:
            operations:
                - PutLogEvents
            usage_flags:
                mode: EC2
                region_type: ACJ
    agenthealth/statuscode:
        is_status_code_enabled: true
        is_usage_data_enabled: true
        stats:
            usage_flags:
                mode: EC2
                region_type: ACJ
    ecs_observer:
        cluster_name: ecs-cluster-a
        cluster_region: us-west-2
        docker_labels:
            - job_name_label: ECS_PROMETHEUS_JOB_NAME_1
              metrics_path_label: ECS_PROMETHEUS_METRICS_PATH
              port_label: ECS_PROMETHEUS_EXPORTER_PORT_SUBSET
        refresh_interval: 1m
        result_file: "{ecsSdFileName}"
        services:
            - container_name_pattern: nginx-prometheus-exporter
              job_name: service_name_1
              metrics_path: /metrics
              metrics_ports:
                - "9113"
              name_pattern: .*-application-stack
            - metrics_path: /stats/metrics
              metrics_ports:
                - "9114"
              name_pattern: run-application-stack
        task_definitions:
            - arn_pattern: .*task_def_1:[0-9]+
              job_name: task_def_1
              metrics_path: /stats/metrics
              metrics_ports:
                - "9901"
            - arn_pattern: task_def_2
              container_name_pattern: ^envoy$
              metrics_path: /metrics
              metrics_ports:
                - "9902"
    entitystore:
        mode: ec2
        region: us-west-2
processors:
    batch/prometheus/cloudwatchlogs:
        metadata_cardinality_limit: 1000
        send_batch_max_size: 0
        send_batch_size: 8192
        timeout: 5s
receivers:
    telegraf_prometheus:
        collection_interval: 1m0s
        initial_delay: 1s
        timeout: 0s
service:
    extensions:
        - agenthealth/logs
        - agenthealth/statuscode
        - ecs_observer
        - entitystore
    pipelines:
        metrics/prometheus/cloudwatchlogs:
            exporters:
                - awsemf/prometheus
            processors:
                - batch/prometheus/cloudwatchlogs
            receivers:
                - telegraf_prometheus
    telemetry:
        logs:
            encoding: console
            level: info
            output_paths:
                - /opt/aws/amazon-cloudwatch-agent/logs/amazon-cloudwatch-agent.log
            sampling:
                enabled: true
                initial: 2
                thereafter: 500
                tick: 10s
        metrics:
            level: None
        traces:
            level: None
