exporters:
  awscloudwatch:
    drop_original_metrics:
      CPU_USAGE_IDLE: true
      cpu_time_active: true
    force_flush_interval: 1m0s
    max_datums_per_call: 1000
    max_values_per_datum: 150
    middleware: agenthealth/metrics
    namespace: CWAgent
    region: us-west-2
    resource_to_telemetry_conversion:
      enabled: true
    rollup_dimensions:
    - - ImageId
    - - InstanceId
      - InstanceType
    - - d1
    - [ ]
  prometheusremotewrite/amp:
    add_metric_suffixes: true
    auth:
      authenticator: sigv4auth
    compression: ""
    disable_keep_alives: false
    endpoint: https://aps-workspaces.us-west-2.amazonaws.com/workspaces/ws-12345/api/v1/remote_write
    export_created_metric:
      enabled: false
    http2_ping_timeout: 0s
    http2_read_idle_timeout: 0s
    max_batch_size_bytes: 3000000
    namespace: ""
    proxy_url: ""
    read_buffer_size: 0
    remote_write_queue:
      enabled: true
      num_consumers: 5
      queue_size: 10000
    resource_to_telemetry_conversion:
      clear_after_copy: true
      enabled: true
    retry_on_failure:
      enabled: true
      initial_interval: 50ms
      randomization_factor: 0.5
      multiplier: 1.5
      max_interval: 30s
      max_elapsed_time: 5m0s
    send_metadata: false
    target_info:
      enabled: true
    timeout: 5s
    tls:
      ca_file: ""
      cert_file: ""
      include_system_ca_certs_pool: false
      insecure: false
      insecure_skip_verify: false
      key_file: ""
      max_version: ""
      min_version: ""
      reload_interval: 0s
      server_name_override: ""
    write_buffer_size: 524288
extensions:
  agenthealth/metrics:
    is_usage_data_enabled: true
    stats:
      operations:
      - PutMetricData
      usage_flags:
        mode: EC2
        region_type: ACJ
  entitystore:
    mode: ec2
    region: us-west-2
  sigv4auth:
    assume_role:
      sts_region: us-west-2
    region: us-west-2
processors:
  awsentity/resource:
    entity_type: Resource
    platform: ec2
  batch/host/amp:
    metadata_cardinality_limit: 1000
    send_batch_max_size: 0
    send_batch_size: 8192
    timeout: 1m0s
  ec2tagger:
    ec2_instance_tag_keys:
    - AutoScalingGroupName
    ec2_metadata_tags:
    - InstanceType
    - ImageId
    - InstanceId
    imds_retries: 1
    refresh_interval_seconds: 0s
  rollup:
    attribute_groups:
    - - ImageId
    - - InstanceId
      - InstanceType
    - - d1
    - [ ]
    cache_size: 1000
    drop_original:
    - CPU_USAGE_IDLE
    - cpu_time_active
  transform:
    error_mode: propagate
    flatten_data: false
    log_statements: [ ]
    metric_statements:
    - context: metric
      statements:
      - set(unit, "unit") where name == "cpu_usage_idle"
      - set(name, "CPU_USAGE_IDLE") where name == "cpu_usage_idle"
      - set(unit, "unit") where name == "cpu_usage_nice"
    trace_statements: [ ]
receivers:
  telegraf_cpu:
    collection_interval: 10s
    initial_delay: 1s
    timeout: 0s
service:
  extensions:
  - agenthealth/metrics
  - sigv4auth
  - entitystore
  pipelines:
    metrics/host/cloudwatch:
      exporters:
      - awscloudwatch
      processors:
      - awsentity/resource
      - ec2tagger
      - transform
      receivers:
      - telegraf_cpu
    metrics/host/amp:
      exporters:
      - prometheusremotewrite/amp
      processors:
      - ec2tagger
      - transform
      - rollup
      - batch/host/amp
      receivers:
      - telegraf_cpu
  telemetry:
    logs:
      development: false
      disable_caller: false
      disable_stacktrace: false
      encoding: console
      level: info
      output_paths:
      - /opt/aws/amazon-cloudwatch-agent/logs/amazon-cloudwatch-agent.log
      sampling:
        enabled: true
        initial: 2
        thereafter: 500
        tick: 10s
    metrics:
      address: ""
      level: None
    traces: { }
