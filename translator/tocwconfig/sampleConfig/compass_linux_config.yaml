exporters:
    awscloudwatch:
        drop_original_metrics:
            collectd_drop: true
            statsd_drop: true
        endpoint_override: https://monitoring-fips.us-west-2.amazonaws.com
        force_flush_interval: 1m0s
        max_datums_per_call: 1000
        max_values_per_datum: 5000
        middleware: agenthealth/metrics
        namespace: CWAgent
        region: us-west-2
        resource_to_telemetry_conversion:
            enabled: true
        role_arn: metrics_role_arn_value_test
        rollup_dimensions:
            - - ImageId
            - - InstanceId
              - InstanceType
            - - d1
            - []
    awsemf:
        add_entity: true
        certificate_file_path: ""
        detailed_metrics: false
        dimension_rollup_option: NoDimensionRollup
        disable_metric_extraction: false
        eks_fargate_container_insights_enabled: false
        endpoint: https://logs-fips.us-west-2.amazonaws.com
        enhanced_container_insights: false
        external_id: ""
        imds_retries: 1
        local_mode: false
        log_group_name: /aws/cwagent
        log_retention: 0
        log_stream_name: ""
        max_retries: 2
        middleware: agenthealth/logs
        namespace: CWAgent
        no_verify_ssl: false
        num_workers: 8
        output_destination: cloudwatch
        profile: ""
        proxy_address: ""
        region: us-west-2
        request_timeout_seconds: 30
        resource_arn: ""
        resource_to_telemetry_conversion:
            enabled: true
        retain_initial_value_of_delta_metric: false
        role_arn: log_role_arn_value_test
        version: "0"
extensions:
    agenthealth/logs:
        is_usage_data_enabled: true
        stats:
            operations:
                - PutLogEvents
            usage_flags:
                mode: EC2
                region_type: ACJ
    agenthealth/metrics:
        is_usage_data_enabled: true
        stats:
            operations:
                - PutMetricData
            usage_flags:
                mode: EC2
                region_type: ACJ
    agenthealth/statuscode:
        is_status_code_enabled: true
        is_usage_data_enabled: true
        stats:
            usage_flags:
                mode: EC2
                region_type: ACJ
    entitystore:
        mode: ec2
        region: us-west-2
processors:
    awsentity/service/otlp/cloudwatch:
        entity_type: Service
        platform: ec2
        transform_entity:
            attributes:
                - key: AWS.ServiceNameSource
                  value: UserConfiguration
            key_attributes:
                - key: Name
                  value: agent-level-service
                - key: Environment
                  value: agent-level-environment
    awsentity/service/otlp/cloudwatchlogs:
        entity_type: Service
        platform: ec2
        transform_entity:
            attributes:
                - key: AWS.ServiceNameSource
                  value: UserConfiguration
            key_attributes:
                - key: Name
                  value: otlp-level-service
                - key: Environment
                  value: otlp-level-environment
    awsentity/service/telegraf:
        entity_type: Service
        platform: ec2
        scrape_datapoint_attribute: true
    batch/hostOtlpMetrics/cloudwatchlogs:
        metadata_cardinality_limit: 1000
        send_batch_max_size: 0
        send_batch_size: 8192
        timeout: 1m0s
    cumulativetodelta/hostOtlpMetrics:
        exclude:
            match_type: ""
        include:
            match_type: ""
        initial_value: 2
        max_staleness: 0s
    cumulativetodelta/hostOtlpMetrics/cloudwatchlogs:
        exclude:
            match_type: ""
        include:
            match_type: ""
        initial_value: 2
        max_staleness: 0s
    ec2tagger:
        ec2_instance_tag_keys:
            - AutoScalingGroupName
        ec2_metadata_tags:
            - ImageId
            - InstanceId
            - InstanceType
        imds_retries: 1
        middleware: agenthealth/statuscode
        refresh_tags_interval: 0s
        refresh_volumes_interval: 0s
receivers:
    otlp/metrics:
        protocols:
            grpc:
                endpoint: 127.0.0.1:4317
                keepalive:
                    enforcement_policy: {}
                    server_parameters: {}
                read_buffer_size: 524288
                transport: tcp
            http:
                cors: {}
                endpoint: 127.0.0.1:4318
                idle_timeout: 0s
                logs_url_path: /v1/logs
                metrics_url_path: /v1/metrics
                read_header_timeout: 0s
                traces_url_path: /v1/traces
                write_timeout: 0s
    telegraf_socket_listener:
        collection_interval: 10s
        initial_delay: 1s
        timeout: 0s
    telegraf_statsd:
        collection_interval: 10s
        initial_delay: 1s
        timeout: 0s
service:
    extensions:
        - agenthealth/metrics
        - agenthealth/statuscode
        - agenthealth/logs
        - entitystore
    pipelines:
        metrics/hostCustomMetrics:
            exporters:
                - awscloudwatch
            processors:
                - ec2tagger
                - awsentity/service/telegraf
            receivers:
                - telegraf_socket_listener
                - telegraf_statsd
        metrics/hostOtlpMetrics:
            exporters:
                - awscloudwatch
            processors:
                - cumulativetodelta/hostOtlpMetrics
                - ec2tagger
                - awsentity/service/otlp/cloudwatch
            receivers:
                - otlp/metrics
        metrics/hostOtlpMetrics/cloudwatchlogs:
            exporters:
                - awsemf
            processors:
                - cumulativetodelta/hostOtlpMetrics/cloudwatchlogs
                - awsentity/service/otlp/cloudwatchlogs
                - batch/hostOtlpMetrics/cloudwatchlogs
            receivers:
                - otlp/metrics
    telemetry:
        logs:
            encoding: console
            level: error
            output_paths:
                - /tmp/fake/log/hotdog.log
            sampling:
                enabled: true
                initial: 2
                thereafter: 500
                tick: 10s
        metrics:
            level: None
        traces:
            level: None
