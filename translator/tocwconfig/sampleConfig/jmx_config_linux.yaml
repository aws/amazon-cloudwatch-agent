exporters:
    awscloudwatch:
        drop_original_metrics:
            CPU_USAGE_IDLE: true
            cpu_time_active: true
        force_flush_interval: 1m0s
        max_datums_per_call: 1000
        max_values_per_datum: 150
        middleware: agenthealth/metrics
        namespace: CWAgent
        region: us-west-2
        resource_to_telemetry_conversion:
            enabled: true
extensions:
    agenthealth/metrics:
        is_usage_data_enabled: true
        stats:
            operations:
                - PutMetricData
            usage_flags:
                mode: EC2
                region_type: ACJ
processors:
    cumulativetodelta/jmx:
        exclude:
            match_type: ""
        include:
            match_type: ""
        initial_value: 2
        max_staleness: 0s
    filter/jmx:
        error_mode: propagate
        logs: {}
        metrics:
            include:
                match_type: strict
                metric_names:
                    - jvm.memory.heap.init
                    - jvm.memory.heap.used
                    - jvm.memory.nonheap.init
                    - kafka.consumer.fetch-rate
        spans: {}
        traces: {}
    resource/jmx:
        attributes:
            - action: delete
              converted_type: ""
              from_attribute: ""
              from_context: ""
              key: ""
              pattern: telemetry.sdk.*
            - action: delete
              converted_type: ""
              from_attribute: ""
              from_context: ""
              key: service.name
              pattern: ""
              value: unknown_service:java
    transform:
        error_mode: propagate
        flatten_data: false
        log_statements: []
        metric_statements:
            - context: metric
              statements:
                - set(unit, "unit") where name == "cpu_usage_idle"
                - set(name, "CPU_USAGE_IDLE") where name == "cpu_usage_idle"
                - set(unit, "unit") where name == "cpu_usage_nice"
                - set(unit, "unit") where name == "disk_free"
                - set(name, "DISK_FREE") where name == "disk_free"
        trace_statements: []
    transform/jmx:
        error_mode: propagate
        flatten_data: false
        log_statements: []
        metric_statements:
            - context: metric
              statements:
                - set(unit, "unit") where name == "jvm.memory.heap.used"
                - set(name, "JVM_MEM_HEAP_USED") where name == "jvm.memory.heap.used"
                - set(name, "kafka.fetch-rate") where name == "kafka.consumer.fetch-rate"
        trace_statements: []
receivers:
    jmx:
        collection_interval: 1m0s
        endpoint: localhost:8080
        jar_path: ../../packaging/opentelemetry-jmx-metrics.jar
        otlp:
            endpoint: 0.0.0.0:0
            timeout: 5s
        target_system: jvm,kafka-consumer
    telegraf_cpu:
        collection_interval: 1m0s
        initial_delay: 1s
        timeout: 0s
    telegraf_disk:
        collection_interval: 1m0s
        initial_delay: 1s
        timeout: 0s
service:
    extensions:
        - agenthealth/metrics
    pipelines:
        metrics/host:
            exporters:
                - awscloudwatch
            processors:
                - transform
            receivers:
                - telegraf_cpu
                - telegraf_disk
        metrics/jmx:
            exporters:
                - awscloudwatch
            processors:
                - filter/jmx
                - resource/jmx
                - cumulativetodelta/jmx
                - transform/jmx
            receivers:
                - jmx
    telemetry:
        logs:
            development: false
            disable_caller: false
            disable_stacktrace: false
            encoding: console
            level: info
            output_paths:
                - /opt/aws/amazon-cloudwatch-agent/logs/amazon-cloudwatch-agent.log
            sampling:
                enabled: true
                initial: 2
                thereafter: 500
                tick: 10s
        metrics:
            address: ""
            level: None
        traces: {}
