[agent]
  collection_jitter = "0s"
  debug = false
  flush_interval = "1s"
  flush_jitter = "0s"
  hostname = ""
  interval = "60s"
  logfile = "/opt/aws/amazon-cloudwatch-agent/logs/amazon-cloudwatch-agent.log"
  logtarget = "lumberjack"
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  omit_hostname = false
  precision = ""
  quiet = false
  round_interval = false

[inputs]

  [[inputs.cpu]]
    collect_cpu_time = true
    fieldpass = ["usage_idle", "usage_nice", "usage_guest", "time_active", "usage_active"]
    interval = "10s"
    percpu = true
    report_active = true
    totalcpu = false
    [inputs.cpu.tags]
      "aws:StorageResolution" = "true"
      d1 = "foo"
      d2 = "bar"
      metricPath = "metrics"

  [[inputs.disk]]
    fieldpass = ["free", "total", "used"]
    ignore_fs = ["sysfs", "devtmpfs"]
    interval = "60s"
    mount_points = ["/", "/dev", "/sys"]
    tagexclude = ["mode"]
    [inputs.disk.tags]
      d3 = "foo3"
      d4 = "bar4"
      metricPath = "metrics"

  [[inputs.nvidia_smi]]
    fieldpass = ["utilization_gpu", "utilization_memory", "power_draw", "temperature_gpu"]
    interval = "60s"
    tagexclude = ["compute_mode", "pstate", "uuid"]
    [inputs.nvidia_smi.tags]
      metricPath = "metrics"

[outputs]

  [[outputs.cloudwatch]]
    force_flush_interval = "60s"
    namespace = "CWAgent"
    region = "us-west-2"
    tagexclude = ["host", "metricPath"]
    [outputs.cloudwatch.drop_original_metrics]
      cpu = ["cpu_usage_idle", "time_active"]
      nvidia_smi = ["temperature_gpu", "utilization_gpu"]

    [[outputs.cloudwatch.metric_decoration]]
      category = "cpu"
      name = "usage_idle"
      rename = "CPU_USAGE_IDLE"
      unit = "unit"

    [[outputs.cloudwatch.metric_decoration]]
      category = "cpu"
      name = "usage_nice"
      unit = "unit"
    [outputs.cloudwatch.tagpass]
      metricPath = ["metrics"]

[processors]

  [[processors.ec2tagger]]
    ec2_instance_tag_keys = ["aws:autoscaling:groupName"]
    ec2_metadata_tags = ["ImageId", "InstanceId", "InstanceType"]
    refresh_interval_seconds = "0s"
    [processors.ec2tagger.tagpass]
      metricPath = ["metrics"]
